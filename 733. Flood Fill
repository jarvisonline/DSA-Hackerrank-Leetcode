from typing import List

class Solution:
    def floodFill(self, image: List[List[int]], sr: int, sc: int, color: int) -> List[List[int]]:
        if not image or image[sr][sc] == color:
            return image
        
        self.dfs(image, sr, sc, image[sr][sc], color)
        return image
    
    def dfs(self, image: List[List[int]], row: int, col: int, old_color: int, new_color: int) -> None:
        if row < 0 or row >= len(image) or col < 0 or col >= len(image[0]) or image[row][col] != old_color:
            return
        
        image[row][col] = new_color
        directions = [(0, 1), (0, -1), (1, 0), (-1, 0)] # 4-directional
        for dr, dc in directions:
            self.dfs(image, row + dr, col + dc, old_color, new_color)
